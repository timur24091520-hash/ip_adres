import telebot
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton
import sqlite3
import os
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(name)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞
BOT_TOKEN = "YOUR_BOT_TOKEN"
CHANNEL_USERNAME = "@dragoncaneloni67"  # –í–∞—à –∫–∞–Ω–∞–ª

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = telebot.TeleBot(BOT_TOKEN)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
def init_db():
    conn = sqlite3.connect('posts.db')
    cursor = conn.cursor()
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS posts (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            user_id INTEGER,
            message_type TEXT,
            content TEXT,
            file_id TEXT,
            status TEXT DEFAULT 'pending',
            timestamp DATETIME DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    conn.commit()
    conn.close()

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ—Å—Ç–∞ –≤ –ë–î
def save_post(user_id, message_type, content, file_id=None):
    conn = sqlite3.connect('posts.db')
    cursor = conn.cursor()
    cursor.execute('''
        INSERT INTO posts (user_id, message_type, content, file_id)
        VALUES (?, ?, ?, ?)
    ''', (user_id, message_type, content, file_id))
    post_id = cursor.lastrowid
    conn.commit()
    conn.close()
    return post_id

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ—Å—Ç–æ–≤ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏
def get_pending_posts():
    conn = sqlite3.connect('posts.db')
    cursor = conn.cursor()
    cursor.execute('SELECT * FROM posts WHERE status = "pending" ORDER BY timestamp')
    posts = cursor.fetchall()
    conn.close()
    return posts

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –ø–æ—Å—Ç–∞
def update_post_status(post_id, status):
    conn = sqlite3.connect('posts.db')
    cursor = conn.cursor()
    cursor.execute('UPDATE posts SET status = ? WHERE id = ?', (status, post_id))
    conn.commit()
    conn.close()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def send_welcome(message):
    welcome_text = """
ü§ñ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç-–º–æ–¥–µ—Ä–∞—Ç–æ—Ä –¥–ª—è –∫–∞–Ω–∞–ª–∞ @dragoncaneloni67!

–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –ø–æ—Å—Ç –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ –∫–∞–Ω–∞–ª–µ. –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ:
‚Ä¢ –¢–µ–∫—Å—Ç
‚Ä¢ –§–æ—Ç–æ —Å –ø–æ–¥–ø–∏—Å—å—é
‚Ä¢ –í–∏–¥–µ–æ —Å –ø–æ–¥–ø–∏—Å—å—é
‚Ä¢ –î–æ–∫—É–º–µ–Ω—Ç —Å –ø–æ–¥–ø–∏—Å—å—é

–ü–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º –≤–∞—à –ø–æ—Å—Ç –±—É–¥–µ—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –≤ –∫–∞–Ω–∞–ª–µ!
    """
    bot.send_message(message.chat.id, welcome_text)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(content_types=['text'])
def handle_text(message):
    if message.text.startswith('/'):
        return
    
    post_id = save_post(message.from_user.id, 'text', message.text)
    
    # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    bot.send_message(message.chat.id, "‚úÖ –í–∞—à —Ç–µ–∫—Å—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é!")
    
    # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
    notify_admin(post_id, message.from_user)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ç–æ
@bot.message_handler(content_types=['photo'])
def handle_photo(message):
    if message.caption is None:
        bot.send_message(message.chat.id, "‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–±–∞–≤—å—Ç–µ –ø–æ–¥–ø–∏—Å—å –∫ —Ñ–æ—Ç–æ!")
        return
    
    file_id = message.photo[-1].file_id
    post_id = save_post(message.from_user.id, 'photo', message.caption, file_id)
    
    bot.send_message(message.chat.id, "‚úÖ –í–∞—à–µ —Ñ–æ—Ç–æ —Å –ø–æ–¥–ø–∏—Å—å—é –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é!")
    notify_admin(post_id, message.from_user)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–∏–¥–µ–æ
@bot.message_handler(content_types=['video'])
def handle_video(message):
    if message.caption is None:
        bot.send_message(message.chat.id, "‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–±–∞–≤—å—Ç–µ –ø–æ–¥–ø–∏—Å—å –∫ –≤–∏–¥–µ–æ!")
        return
    
    file_id = message.video.file_id
    post_id = save_post(message.from_user.id, 'video', message.caption, file_id)
    
    bot.send_message(message.chat.id, "‚úÖ –í–∞—à–µ –≤–∏–¥–µ–æ —Å –ø–æ–¥–ø–∏—Å—å—é –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é!")
    notify_admin(post_id, message.from_user)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
@bot.message_handler(content_types=['document'])
def handle_document(message):
    if message.caption is None:
        bot.send_message(message.chat.id, "‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–±–∞–≤—å—Ç–µ –ø–æ–¥–ø–∏—Å—å –∫ –¥–æ–∫—É–º–µ–Ω—Ç—É!")
        return
    
    file_id = message.document.file_id
    post_id = save_post(message.from_user.id, 'document', message.caption, file_id)
    
    bot.send_message(message.chat.id, "‚úÖ –í–∞—à –¥–æ–∫—É–º–µ–Ω—Ç —Å –ø–æ–¥–ø–∏—Å—å—é –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é!")
    notify_admin(post_id, message.from_user)

# –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –æ –Ω–æ–≤–æ–º –ø–æ—Å—Ç–µ
def notify_admin(post_id, user):
    posts = get_pending_posts()
    current_post = None
    
    for post in posts:
        if post[0] == post_id:
            current_post = post
            break
    
    if not current_post:
        return
    
    admin_chat_id = "YOUR_ADMIN_CHAT_ID"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à chat_id
    
    keyboard = InlineKeyboardMarkup()
    keyboard.row(
        InlineKeyboardButton("‚úÖ –û–¥–æ–±—Ä–∏—Ç—å", callback_data=f"approve_{post_id}"),
        InlineKeyboardButton("‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=f"reject_{post_id}")
    )
    
    user_info = f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{user.username or '–Ω–µ—Ç username'}\nID: {user.id}\n"
    post_info = f"üìù –¢–∏–ø: {current_post[2]}\n–í—Ä–µ–º—è: {current_post[6]}\n\n"
    
    if current_post[2] == 'text':
        message_text = user_info + post_info + f"–¢–µ–∫—Å—Ç:\n{current_post[3]}"
        bot.send_message(admin_chat_id, message_text, reply_markup=keyboard)
    
    elif current_post[2] == 'photo':
        message_text = user_info + post_info + f"–ü–æ–¥–ø–∏—Å—å:\n{current_post[3]}"
        bot.send_photo(admin_chat_id, current_post[4], caption=message_text, reply_markup=keyboard)
    
    elif current_post[2] == 'video':
        message_text = user_info + post_info + f"–ü–æ–¥–ø–∏—Å—å:\n{current_post[3]}"
        bot.send_video(admin_chat_id, current_post[4], caption=message_text, reply_markup=keyboard)
    
    elif current_post[2] == 'document':
        message_text = user_info + post_info + f"–ü–æ–¥–ø–∏—Å—å:\n{current_post[3]}"
        bot.send_document(admin_chat_id, current_post[4], caption=message_text, reply_markup=keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∑–∞–ø—Ä–æ—Å–æ–≤ (–∫–Ω–æ–ø–∫–∏ –æ–¥–æ–±—Ä–∏—Ç—å/–æ—Ç–∫–ª–æ–Ω–∏—Ç—å)
@bot.callback_query_handler(func=lambda call: True)
def handle_callback(call):
    if call.data.startswith('approve_'):
        post_id = int(call.data.split('_')[1])
        approve_post(post_id, call.message)
    
    elif call.data.startswith('reject_'):
        post_id = int(call.data.split('_')[1])
        reject_post(post_id, call.message)

# –§—É–Ω–∫—Ü–∏—è –æ–¥–æ–±—Ä–µ–Ω–∏—è –ø–æ—Å—Ç–∞
def approve_post(post_id, admin_message):
    conn = sqlite3.connect('posts.db')
    cursor = conn.cursor()
    cursor.execute('SELECT * FROM posts WHERE id = ?', (post_id,))
    post = cursor.fetchone()
    conn.close()
    
    if not post:
        bot.answer_callback_query(admin_message.id, "–ü–æ—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    
    # –ü—É–±–ª–∏–∫–∞—Ü–∏—è –≤ –∫–∞–Ω–∞–ª
    try:
        if post[2] == 'text':
            bot.send_message(CHANNEL_USERNAME, post[3])
        
        elif post[2] == 'photo':
            bot.send_photo(CHANNEL_USERNAME, post[4], caption=post[3])
        
        elif post[2] == 'video':
            bot.send_video(CHANNEL_USERNAME, post[4], caption=post[3])
        
        elif post[2] == 'document':
            bot.send_document(CHANNEL_USERNAME, post[4], caption=post[3])
        
        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞
        update_post_status(post_id, 'approved')
        
        # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        try:
            bot.send_message(post[1], "üéâ –í–∞—à –ø–æ—Å—Ç –±—ã–ª –æ–¥–æ–±—Ä–µ–Ω –∏ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –≤ –∫–∞–Ω–∞–ª–µ!")
        except:
            pass
        
        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∞–¥–º–∏–Ω–∞
        bot.edit_message_text(
            chat_id=admin_message.chat.id,
            message_id=admin_message.message_id,
            text=f"‚úÖ –ü–æ—Å—Ç –æ–¥–æ–±—Ä–µ–Ω –∏ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω!\n\n{admin_message.text}",
            reply_markup=None
        )
        
        bot.answer_callback_query(admin_message.id, "–ü–æ—Å—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω!")
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: {e}")
        bot.answer_callback_query(admin_message.id, "–û—à–∏–±–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏!")

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –ø–æ—Å—Ç–∞
def reject_post(post_id, admin_message):
    update_post_status(post_id, 'rejected')
    
    conn = sqlite3.connect('posts.db')
    cursor = conn.cursor()
    cursor.execute('SELECT user_id FROM posts WHERE id = ?', (post_id,))
    user_id = cursor.fetchone()[0]
    conn.close()
    
    # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    try:
        bot.send_message(user_id, "‚ùå –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤–∞—à –ø–æ—Å—Ç –±—ã–ª –æ—Ç–∫–ª–æ–Ω–µ–Ω –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º.")
    except:
        pass
    
    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∞–¥–º–∏–Ω–∞
    bot.edit_message_text(
        chat_id=admin_message.chat.id,
        message_id=admin_message.message_id,
        text=f"‚ùå –ü–æ—Å—Ç –æ—Ç–∫–ª–æ–Ω–µ–Ω!\n\n{admin_message.text}",
        reply_markup=None
    )
    
    bot.answer_callback_query(admin_message.id, "–ü–æ—Å—Ç –æ—Ç–∫–ª–æ–Ω–µ–Ω!")

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∞–¥–º–∏–Ω–∞ - –ø—Ä–æ—Å–º–æ—Ç—Ä –æ—á–µ—Ä–µ–¥–∏
@bot.message_handler(commands=['moderate'])
def show_moderation_queue(message):
    # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —ç—Ç–æ –∞–¥–º–∏–Ω (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à chat_id)
    if message.from_user.id != YOUR_ADMIN_CHAT_ID:
        bot.send_message(message.chat.id, "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
        return
    
    posts = get_pending_posts()
    
    if not posts:
        bot.send_message(message.chat.id, "‚úÖ –ù–µ—Ç –ø–æ—Å—Ç–æ–≤ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏!")
        return
    
    bot.send_message(message.chat.id, f"üìã –ü–æ—Å—Ç–æ–≤ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏: {len(posts)}")
    
    for post in posts:
        notify_admin(post[0], type('User', (), {'id': post[1], 'username': 'user'}))

if __name__ == "__main__":
    init_db()
    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    bot.infinity_polling()
